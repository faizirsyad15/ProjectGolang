// Code generated by protoc-gen-go. DO NOT EDIT.
// source: tipeKamar.proto

/*
Package grpc is a generated protocol buffer package.

It is generated from these files:
	tipeKamar.proto

It has these top-level messages:
	AddTipeKamarReq
	ReadTipeKamarByHargaReq
	ReadTipeKamarByHargaResp
	ReadTipeKamarResp
	UpdateTipeKamarReq
	ReadTipeKamarByNamaReq
	ReadTipeKamarByNamaResp
*/
package grpc

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "github.com/golang/protobuf/ptypes/empty"

import (
	context "golang.org/x/net/context"
	grpc1 "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type AddTipeKamarReq struct {
	IdTipeKamar   string `protobuf:"bytes,1,opt,name=idTipeKamar" json:"idTipeKamar,omitempty"`
	NamaTipeKamar string `protobuf:"bytes,2,opt,name=namaTipeKamar" json:"namaTipeKamar,omitempty"`
	HargaKamar    int32  `protobuf:"varint,3,opt,name=hargaKamar" json:"hargaKamar,omitempty"`
	Status        string `protobuf:"bytes,4,opt,name=status" json:"status,omitempty"`
}

func (m *AddTipeKamarReq) Reset()                    { *m = AddTipeKamarReq{} }
func (m *AddTipeKamarReq) String() string            { return proto.CompactTextString(m) }
func (*AddTipeKamarReq) ProtoMessage()               {}
func (*AddTipeKamarReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *AddTipeKamarReq) GetIdTipeKamar() string {
	if m != nil {
		return m.IdTipeKamar
	}
	return ""
}

func (m *AddTipeKamarReq) GetNamaTipeKamar() string {
	if m != nil {
		return m.NamaTipeKamar
	}
	return ""
}

func (m *AddTipeKamarReq) GetHargaKamar() int32 {
	if m != nil {
		return m.HargaKamar
	}
	return 0
}

func (m *AddTipeKamarReq) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

type ReadTipeKamarByHargaReq struct {
	HargaKamar int32 `protobuf:"varint,1,opt,name=hargaKamar" json:"hargaKamar,omitempty"`
}

func (m *ReadTipeKamarByHargaReq) Reset()                    { *m = ReadTipeKamarByHargaReq{} }
func (m *ReadTipeKamarByHargaReq) String() string            { return proto.CompactTextString(m) }
func (*ReadTipeKamarByHargaReq) ProtoMessage()               {}
func (*ReadTipeKamarByHargaReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *ReadTipeKamarByHargaReq) GetHargaKamar() int32 {
	if m != nil {
		return m.HargaKamar
	}
	return 0
}

type ReadTipeKamarByHargaResp struct {
	IdTipeKamar   string `protobuf:"bytes,1,opt,name=idTipeKamar" json:"idTipeKamar,omitempty"`
	NamaTipeKamar string `protobuf:"bytes,2,opt,name=namaTipeKamar" json:"namaTipeKamar,omitempty"`
	HargaKamar    int32  `protobuf:"varint,3,opt,name=hargaKamar" json:"hargaKamar,omitempty"`
	Status        string `protobuf:"bytes,4,opt,name=status" json:"status,omitempty"`
}

func (m *ReadTipeKamarByHargaResp) Reset()                    { *m = ReadTipeKamarByHargaResp{} }
func (m *ReadTipeKamarByHargaResp) String() string            { return proto.CompactTextString(m) }
func (*ReadTipeKamarByHargaResp) ProtoMessage()               {}
func (*ReadTipeKamarByHargaResp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *ReadTipeKamarByHargaResp) GetIdTipeKamar() string {
	if m != nil {
		return m.IdTipeKamar
	}
	return ""
}

func (m *ReadTipeKamarByHargaResp) GetNamaTipeKamar() string {
	if m != nil {
		return m.NamaTipeKamar
	}
	return ""
}

func (m *ReadTipeKamarByHargaResp) GetHargaKamar() int32 {
	if m != nil {
		return m.HargaKamar
	}
	return 0
}

func (m *ReadTipeKamarByHargaResp) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

type ReadTipeKamarResp struct {
	AllTipeKamar []*ReadTipeKamarByHargaResp `protobuf:"bytes,1,rep,name=allTipeKamar" json:"allTipeKamar,omitempty"`
}

func (m *ReadTipeKamarResp) Reset()                    { *m = ReadTipeKamarResp{} }
func (m *ReadTipeKamarResp) String() string            { return proto.CompactTextString(m) }
func (*ReadTipeKamarResp) ProtoMessage()               {}
func (*ReadTipeKamarResp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *ReadTipeKamarResp) GetAllTipeKamar() []*ReadTipeKamarByHargaResp {
	if m != nil {
		return m.AllTipeKamar
	}
	return nil
}

type UpdateTipeKamarReq struct {
	IdTipeKamar   string `protobuf:"bytes,1,opt,name=idTipeKamar" json:"idTipeKamar,omitempty"`
	NamaTipeKamar string `protobuf:"bytes,2,opt,name=namaTipeKamar" json:"namaTipeKamar,omitempty"`
	HargaKamar    int32  `protobuf:"varint,3,opt,name=hargaKamar" json:"hargaKamar,omitempty"`
	Status        string `protobuf:"bytes,4,opt,name=status" json:"status,omitempty"`
}

func (m *UpdateTipeKamarReq) Reset()                    { *m = UpdateTipeKamarReq{} }
func (m *UpdateTipeKamarReq) String() string            { return proto.CompactTextString(m) }
func (*UpdateTipeKamarReq) ProtoMessage()               {}
func (*UpdateTipeKamarReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *UpdateTipeKamarReq) GetIdTipeKamar() string {
	if m != nil {
		return m.IdTipeKamar
	}
	return ""
}

func (m *UpdateTipeKamarReq) GetNamaTipeKamar() string {
	if m != nil {
		return m.NamaTipeKamar
	}
	return ""
}

func (m *UpdateTipeKamarReq) GetHargaKamar() int32 {
	if m != nil {
		return m.HargaKamar
	}
	return 0
}

func (m *UpdateTipeKamarReq) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

type ReadTipeKamarByNamaReq struct {
	NamaTipeKamar string `protobuf:"bytes,1,opt,name=namaTipeKamar" json:"namaTipeKamar,omitempty"`
}

func (m *ReadTipeKamarByNamaReq) Reset()                    { *m = ReadTipeKamarByNamaReq{} }
func (m *ReadTipeKamarByNamaReq) String() string            { return proto.CompactTextString(m) }
func (*ReadTipeKamarByNamaReq) ProtoMessage()               {}
func (*ReadTipeKamarByNamaReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *ReadTipeKamarByNamaReq) GetNamaTipeKamar() string {
	if m != nil {
		return m.NamaTipeKamar
	}
	return ""
}

type ReadTipeKamarByNamaResp struct {
	IdTipeKamar   string `protobuf:"bytes,1,opt,name=idTipeKamar" json:"idTipeKamar,omitempty"`
	NamaTipeKamar string `protobuf:"bytes,2,opt,name=namaTipeKamar" json:"namaTipeKamar,omitempty"`
	HargaKamar    int32  `protobuf:"varint,3,opt,name=hargaKamar" json:"hargaKamar,omitempty"`
	Status        string `protobuf:"bytes,4,opt,name=status" json:"status,omitempty"`
}

func (m *ReadTipeKamarByNamaResp) Reset()                    { *m = ReadTipeKamarByNamaResp{} }
func (m *ReadTipeKamarByNamaResp) String() string            { return proto.CompactTextString(m) }
func (*ReadTipeKamarByNamaResp) ProtoMessage()               {}
func (*ReadTipeKamarByNamaResp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *ReadTipeKamarByNamaResp) GetIdTipeKamar() string {
	if m != nil {
		return m.IdTipeKamar
	}
	return ""
}

func (m *ReadTipeKamarByNamaResp) GetNamaTipeKamar() string {
	if m != nil {
		return m.NamaTipeKamar
	}
	return ""
}

func (m *ReadTipeKamarByNamaResp) GetHargaKamar() int32 {
	if m != nil {
		return m.HargaKamar
	}
	return 0
}

func (m *ReadTipeKamarByNamaResp) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func init() {
	proto.RegisterType((*AddTipeKamarReq)(nil), "grpc.AddTipeKamarReq")
	proto.RegisterType((*ReadTipeKamarByHargaReq)(nil), "grpc.ReadTipeKamarByHargaReq")
	proto.RegisterType((*ReadTipeKamarByHargaResp)(nil), "grpc.ReadTipeKamarByHargaResp")
	proto.RegisterType((*ReadTipeKamarResp)(nil), "grpc.ReadTipeKamarResp")
	proto.RegisterType((*UpdateTipeKamarReq)(nil), "grpc.UpdateTipeKamarReq")
	proto.RegisterType((*ReadTipeKamarByNamaReq)(nil), "grpc.ReadTipeKamarByNamaReq")
	proto.RegisterType((*ReadTipeKamarByNamaResp)(nil), "grpc.ReadTipeKamarByNamaResp")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc1.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc1.SupportPackageIsVersion4

// Client API for TipeKamarService service

type TipeKamarServiceClient interface {
	AddTipeKamar(ctx context.Context, in *AddTipeKamarReq, opts ...grpc1.CallOption) (*google_protobuf.Empty, error)
	ReadTipeKamarByHarga(ctx context.Context, in *ReadTipeKamarByHargaReq, opts ...grpc1.CallOption) (*ReadTipeKamarByHargaResp, error)
	ReadTipeKamar(ctx context.Context, in *google_protobuf.Empty, opts ...grpc1.CallOption) (*ReadTipeKamarResp, error)
	UpdateTipeKamar(ctx context.Context, in *UpdateTipeKamarReq, opts ...grpc1.CallOption) (*google_protobuf.Empty, error)
	ReadTipeKamarByNama(ctx context.Context, in *ReadTipeKamarByNamaReq, opts ...grpc1.CallOption) (*ReadTipeKamarByNamaResp, error)
}

type tipeKamarServiceClient struct {
	cc *grpc1.ClientConn
}

func NewTipeKamarServiceClient(cc *grpc1.ClientConn) TipeKamarServiceClient {
	return &tipeKamarServiceClient{cc}
}

func (c *tipeKamarServiceClient) AddTipeKamar(ctx context.Context, in *AddTipeKamarReq, opts ...grpc1.CallOption) (*google_protobuf.Empty, error) {
	out := new(google_protobuf.Empty)
	err := grpc1.Invoke(ctx, "/grpc.TipeKamarService/AddTipeKamar", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *tipeKamarServiceClient) ReadTipeKamarByHarga(ctx context.Context, in *ReadTipeKamarByHargaReq, opts ...grpc1.CallOption) (*ReadTipeKamarByHargaResp, error) {
	out := new(ReadTipeKamarByHargaResp)
	err := grpc1.Invoke(ctx, "/grpc.TipeKamarService/ReadTipeKamarByHarga", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *tipeKamarServiceClient) ReadTipeKamar(ctx context.Context, in *google_protobuf.Empty, opts ...grpc1.CallOption) (*ReadTipeKamarResp, error) {
	out := new(ReadTipeKamarResp)
	err := grpc1.Invoke(ctx, "/grpc.TipeKamarService/ReadTipeKamar", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *tipeKamarServiceClient) UpdateTipeKamar(ctx context.Context, in *UpdateTipeKamarReq, opts ...grpc1.CallOption) (*google_protobuf.Empty, error) {
	out := new(google_protobuf.Empty)
	err := grpc1.Invoke(ctx, "/grpc.TipeKamarService/UpdateTipeKamar", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *tipeKamarServiceClient) ReadTipeKamarByNama(ctx context.Context, in *ReadTipeKamarByNamaReq, opts ...grpc1.CallOption) (*ReadTipeKamarByNamaResp, error) {
	out := new(ReadTipeKamarByNamaResp)
	err := grpc1.Invoke(ctx, "/grpc.TipeKamarService/ReadTipeKamarByNama", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for TipeKamarService service

type TipeKamarServiceServer interface {
	AddTipeKamar(context.Context, *AddTipeKamarReq) (*google_protobuf.Empty, error)
	ReadTipeKamarByHarga(context.Context, *ReadTipeKamarByHargaReq) (*ReadTipeKamarByHargaResp, error)
	ReadTipeKamar(context.Context, *google_protobuf.Empty) (*ReadTipeKamarResp, error)
	UpdateTipeKamar(context.Context, *UpdateTipeKamarReq) (*google_protobuf.Empty, error)
	ReadTipeKamarByNama(context.Context, *ReadTipeKamarByNamaReq) (*ReadTipeKamarByNamaResp, error)
}

func RegisterTipeKamarServiceServer(s *grpc1.Server, srv TipeKamarServiceServer) {
	s.RegisterService(&_TipeKamarService_serviceDesc, srv)
}

func _TipeKamarService_AddTipeKamar_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc1.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddTipeKamarReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TipeKamarServiceServer).AddTipeKamar(ctx, in)
	}
	info := &grpc1.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.TipeKamarService/AddTipeKamar",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TipeKamarServiceServer).AddTipeKamar(ctx, req.(*AddTipeKamarReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _TipeKamarService_ReadTipeKamarByHarga_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc1.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReadTipeKamarByHargaReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TipeKamarServiceServer).ReadTipeKamarByHarga(ctx, in)
	}
	info := &grpc1.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.TipeKamarService/ReadTipeKamarByHarga",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TipeKamarServiceServer).ReadTipeKamarByHarga(ctx, req.(*ReadTipeKamarByHargaReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _TipeKamarService_ReadTipeKamar_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc1.UnaryServerInterceptor) (interface{}, error) {
	in := new(google_protobuf.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TipeKamarServiceServer).ReadTipeKamar(ctx, in)
	}
	info := &grpc1.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.TipeKamarService/ReadTipeKamar",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TipeKamarServiceServer).ReadTipeKamar(ctx, req.(*google_protobuf.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _TipeKamarService_UpdateTipeKamar_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc1.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateTipeKamarReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TipeKamarServiceServer).UpdateTipeKamar(ctx, in)
	}
	info := &grpc1.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.TipeKamarService/UpdateTipeKamar",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TipeKamarServiceServer).UpdateTipeKamar(ctx, req.(*UpdateTipeKamarReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _TipeKamarService_ReadTipeKamarByNama_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc1.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReadTipeKamarByNamaReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TipeKamarServiceServer).ReadTipeKamarByNama(ctx, in)
	}
	info := &grpc1.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.TipeKamarService/ReadTipeKamarByNama",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TipeKamarServiceServer).ReadTipeKamarByNama(ctx, req.(*ReadTipeKamarByNamaReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _TipeKamarService_serviceDesc = grpc1.ServiceDesc{
	ServiceName: "grpc.TipeKamarService",
	HandlerType: (*TipeKamarServiceServer)(nil),
	Methods: []grpc1.MethodDesc{
		{
			MethodName: "AddTipeKamar",
			Handler:    _TipeKamarService_AddTipeKamar_Handler,
		},
		{
			MethodName: "ReadTipeKamarByHarga",
			Handler:    _TipeKamarService_ReadTipeKamarByHarga_Handler,
		},
		{
			MethodName: "ReadTipeKamar",
			Handler:    _TipeKamarService_ReadTipeKamar_Handler,
		},
		{
			MethodName: "UpdateTipeKamar",
			Handler:    _TipeKamarService_UpdateTipeKamar_Handler,
		},
		{
			MethodName: "ReadTipeKamarByNama",
			Handler:    _TipeKamarService_ReadTipeKamarByNama_Handler,
		},
	},
	Streams:  []grpc1.StreamDesc{},
	Metadata: "tipeKamar.proto",
}

func init() { proto.RegisterFile("tipeKamar.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 365 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xcc, 0x53, 0xc1, 0x4e, 0xc2, 0x40,
	0x10, 0x65, 0x05, 0x49, 0x1c, 0x20, 0xe8, 0xa8, 0xd0, 0x54, 0x21, 0x64, 0xe3, 0x81, 0x53, 0x49,
	0xf0, 0xe4, 0x45, 0x23, 0x09, 0x89, 0x89, 0x89, 0x87, 0x8a, 0xe1, 0xbc, 0xc0, 0x5a, 0x49, 0xa8,
	0x2d, 0x65, 0x31, 0xe1, 0x23, 0x3c, 0x98, 0x78, 0xd1, 0xaf, 0x35, 0xdd, 0x05, 0x69, 0xcb, 0x52,
	0x8f, 0x78, 0xdc, 0xd9, 0x99, 0x37, 0x6f, 0xf2, 0xde, 0x83, 0xb2, 0x18, 0xfb, 0xfc, 0x9e, 0xb9,
	0x2c, 0xb0, 0xfc, 0xc0, 0x13, 0x1e, 0xe6, 0x9c, 0xc0, 0x1f, 0x9a, 0x67, 0x8e, 0xe7, 0x39, 0x13,
	0xde, 0x92, 0xb5, 0xc1, 0xfc, 0xb9, 0xc5, 0x5d, 0x5f, 0x2c, 0x54, 0x0b, 0xfd, 0x20, 0x50, 0xbe,
	0x1d, 0x8d, 0x7a, 0xab, 0x49, 0x9b, 0x4f, 0xb1, 0x01, 0x85, 0xf1, 0xba, 0x62, 0x90, 0x06, 0x69,
	0x1e, 0xd8, 0xd1, 0x12, 0x5e, 0x40, 0xe9, 0x95, 0xb9, 0x6c, 0xdd, 0xb3, 0x27, 0x7b, 0xe2, 0x45,
	0xac, 0x03, 0xbc, 0xb0, 0xc0, 0x61, 0xaa, 0x25, 0xdb, 0x20, 0xcd, 0x7d, 0x3b, 0x52, 0xc1, 0x0a,
	0xe4, 0x67, 0x82, 0x89, 0xf9, 0xcc, 0xc8, 0xc9, 0xf1, 0xe5, 0x8b, 0x5e, 0x41, 0xd5, 0xe6, 0x6c,
	0xbd, 0xae, 0xb3, 0xb8, 0x0b, 0x87, 0x42, 0x6a, 0x71, 0x48, 0x92, 0x84, 0xa4, 0xdf, 0x04, 0x0c,
	0xfd, 0xec, 0xcc, 0xdf, 0xf9, 0x5d, 0x7d, 0x38, 0x8a, 0x71, 0x93, 0xa4, 0x3a, 0x50, 0x64, 0x93,
	0x49, 0x94, 0x55, 0xb6, 0x59, 0x68, 0xd7, 0xad, 0x50, 0x3a, 0x6b, 0xdb, 0x29, 0x76, 0x6c, 0x86,
	0x7e, 0x12, 0xc0, 0x27, 0x7f, 0xc4, 0x04, 0xff, 0x57, 0x3a, 0x5e, 0x43, 0x25, 0x71, 0xc0, 0x03,
	0x73, 0xa5, 0x8c, 0x1b, 0x7b, 0x89, 0x66, 0x2f, 0xfd, 0x22, 0x1b, 0x46, 0x50, 0x00, 0xbb, 0xd7,
	0xb2, 0xfd, 0x9e, 0x85, 0xc3, 0x5f, 0x94, 0x47, 0x1e, 0xbc, 0x8d, 0x87, 0x1c, 0x6f, 0xa0, 0x18,
	0xcd, 0x12, 0x9e, 0x2a, 0x15, 0x13, 0xf9, 0x32, 0x2b, 0x96, 0x4a, 0xa4, 0xb5, 0x4a, 0xa4, 0xd5,
	0x0d, 0x13, 0x49, 0x33, 0xd8, 0x87, 0x13, 0x9d, 0xe4, 0x58, 0x4b, 0xb3, 0xc3, 0xd4, 0xfc, 0xc3,
	0x2d, 0x34, 0x83, 0x1d, 0x28, 0xc5, 0x7e, 0x71, 0x0b, 0x07, 0xb3, 0xaa, 0x81, 0x5a, 0x62, 0x74,
	0xa1, 0x9c, 0x30, 0x19, 0x1a, 0xaa, 0x7b, 0xd3, 0x7b, 0x29, 0x37, 0xf6, 0xe0, 0x58, 0x23, 0x2a,
	0x9e, 0x6b, 0x6f, 0x58, 0x1a, 0xc6, 0xac, 0xa5, 0xfc, 0x86, 0xe4, 0x06, 0x79, 0xb9, 0xe7, 0xf2,
	0x27, 0x00, 0x00, 0xff, 0xff, 0x87, 0x6d, 0x5c, 0x01, 0x04, 0x05, 0x00, 0x00,
}
