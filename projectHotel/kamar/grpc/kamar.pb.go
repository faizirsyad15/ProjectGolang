// Code generated by protoc-gen-go. DO NOT EDIT.
// source: kamar.proto

/*
Package grpc is a generated protocol buffer package.

It is generated from these files:
	kamar.proto

It has these top-level messages:
	AddKamarReq
	ReadKamarResp
	UpdateKamarReq
*/
package grpc

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "github.com/golang/protobuf/ptypes/empty"

import (
	context "golang.org/x/net/context"
	grpc1 "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type AddKamarReq struct {
	IdKamar     string `protobuf:"bytes,1,opt,name=idKamar" json:"idKamar,omitempty"`
	IdTipeKamar string `protobuf:"bytes,2,opt,name=idTipeKamar" json:"idTipeKamar,omitempty"`
	IdMenu      string `protobuf:"bytes,3,opt,name=idMenu" json:"idMenu,omitempty"`
	Status      string `protobuf:"bytes,4,opt,name=status" json:"status,omitempty"`
}

func (m *AddKamarReq) Reset()                    { *m = AddKamarReq{} }
func (m *AddKamarReq) String() string            { return proto.CompactTextString(m) }
func (*AddKamarReq) ProtoMessage()               {}
func (*AddKamarReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *AddKamarReq) GetIdKamar() string {
	if m != nil {
		return m.IdKamar
	}
	return ""
}

func (m *AddKamarReq) GetIdTipeKamar() string {
	if m != nil {
		return m.IdTipeKamar
	}
	return ""
}

func (m *AddKamarReq) GetIdMenu() string {
	if m != nil {
		return m.IdMenu
	}
	return ""
}

func (m *AddKamarReq) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

type ReadKamarResp struct {
	AllKamar []*AddKamarReq `protobuf:"bytes,5,rep,name=allKamar" json:"allKamar,omitempty"`
}

func (m *ReadKamarResp) Reset()                    { *m = ReadKamarResp{} }
func (m *ReadKamarResp) String() string            { return proto.CompactTextString(m) }
func (*ReadKamarResp) ProtoMessage()               {}
func (*ReadKamarResp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *ReadKamarResp) GetAllKamar() []*AddKamarReq {
	if m != nil {
		return m.AllKamar
	}
	return nil
}

type UpdateKamarReq struct {
	IdKamar     string `protobuf:"bytes,1,opt,name=idKamar" json:"idKamar,omitempty"`
	IdTipeKamar string `protobuf:"bytes,2,opt,name=idTipeKamar" json:"idTipeKamar,omitempty"`
	IdMenu      string `protobuf:"bytes,3,opt,name=idMenu" json:"idMenu,omitempty"`
	Status      string `protobuf:"bytes,4,opt,name=status" json:"status,omitempty"`
}

func (m *UpdateKamarReq) Reset()                    { *m = UpdateKamarReq{} }
func (m *UpdateKamarReq) String() string            { return proto.CompactTextString(m) }
func (*UpdateKamarReq) ProtoMessage()               {}
func (*UpdateKamarReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *UpdateKamarReq) GetIdKamar() string {
	if m != nil {
		return m.IdKamar
	}
	return ""
}

func (m *UpdateKamarReq) GetIdTipeKamar() string {
	if m != nil {
		return m.IdTipeKamar
	}
	return ""
}

func (m *UpdateKamarReq) GetIdMenu() string {
	if m != nil {
		return m.IdMenu
	}
	return ""
}

func (m *UpdateKamarReq) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func init() {
	proto.RegisterType((*AddKamarReq)(nil), "grpc.AddKamarReq")
	proto.RegisterType((*ReadKamarResp)(nil), "grpc.ReadKamarResp")
	proto.RegisterType((*UpdateKamarReq)(nil), "grpc.UpdateKamarReq")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc1.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc1.SupportPackageIsVersion4

// Client API for KamarService service

type KamarServiceClient interface {
	AddKamar(ctx context.Context, in *AddKamarReq, opts ...grpc1.CallOption) (*google_protobuf.Empty, error)
	ReadKamar(ctx context.Context, in *google_protobuf.Empty, opts ...grpc1.CallOption) (*ReadKamarResp, error)
	UpdateKamar(ctx context.Context, in *UpdateKamarReq, opts ...grpc1.CallOption) (*google_protobuf.Empty, error)
}

type kamarServiceClient struct {
	cc *grpc1.ClientConn
}

func NewKamarServiceClient(cc *grpc1.ClientConn) KamarServiceClient {
	return &kamarServiceClient{cc}
}

func (c *kamarServiceClient) AddKamar(ctx context.Context, in *AddKamarReq, opts ...grpc1.CallOption) (*google_protobuf.Empty, error) {
	out := new(google_protobuf.Empty)
	err := grpc1.Invoke(ctx, "/grpc.KamarService/AddKamar", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *kamarServiceClient) ReadKamar(ctx context.Context, in *google_protobuf.Empty, opts ...grpc1.CallOption) (*ReadKamarResp, error) {
	out := new(ReadKamarResp)
	err := grpc1.Invoke(ctx, "/grpc.KamarService/ReadKamar", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *kamarServiceClient) UpdateKamar(ctx context.Context, in *UpdateKamarReq, opts ...grpc1.CallOption) (*google_protobuf.Empty, error) {
	out := new(google_protobuf.Empty)
	err := grpc1.Invoke(ctx, "/grpc.KamarService/UpdateKamar", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for KamarService service

type KamarServiceServer interface {
	AddKamar(context.Context, *AddKamarReq) (*google_protobuf.Empty, error)
	ReadKamar(context.Context, *google_protobuf.Empty) (*ReadKamarResp, error)
	UpdateKamar(context.Context, *UpdateKamarReq) (*google_protobuf.Empty, error)
}

func RegisterKamarServiceServer(s *grpc1.Server, srv KamarServiceServer) {
	s.RegisterService(&_KamarService_serviceDesc, srv)
}

func _KamarService_AddKamar_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc1.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddKamarReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KamarServiceServer).AddKamar(ctx, in)
	}
	info := &grpc1.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.KamarService/AddKamar",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KamarServiceServer).AddKamar(ctx, req.(*AddKamarReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _KamarService_ReadKamar_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc1.UnaryServerInterceptor) (interface{}, error) {
	in := new(google_protobuf.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KamarServiceServer).ReadKamar(ctx, in)
	}
	info := &grpc1.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.KamarService/ReadKamar",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KamarServiceServer).ReadKamar(ctx, req.(*google_protobuf.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _KamarService_UpdateKamar_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc1.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateKamarReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KamarServiceServer).UpdateKamar(ctx, in)
	}
	info := &grpc1.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.KamarService/UpdateKamar",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KamarServiceServer).UpdateKamar(ctx, req.(*UpdateKamarReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _KamarService_serviceDesc = grpc1.ServiceDesc{
	ServiceName: "grpc.KamarService",
	HandlerType: (*KamarServiceServer)(nil),
	Methods: []grpc1.MethodDesc{
		{
			MethodName: "AddKamar",
			Handler:    _KamarService_AddKamar_Handler,
		},
		{
			MethodName: "ReadKamar",
			Handler:    _KamarService_ReadKamar_Handler,
		},
		{
			MethodName: "UpdateKamar",
			Handler:    _KamarService_UpdateKamar_Handler,
		},
	},
	Streams:  []grpc1.StreamDesc{},
	Metadata: "kamar.proto",
}

func init() { proto.RegisterFile("kamar.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 266 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0xce, 0x4e, 0xcc, 0x4d,
	0x2c, 0xd2, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x49, 0x2f, 0x2a, 0x48, 0x96, 0x92, 0x4e,
	0xcf, 0xcf, 0x4f, 0xcf, 0x49, 0xd5, 0x07, 0x8b, 0x25, 0x95, 0xa6, 0xe9, 0xa7, 0xe6, 0x16, 0x94,
	0x54, 0x42, 0x94, 0x28, 0x55, 0x72, 0x71, 0x3b, 0xa6, 0xa4, 0x78, 0x83, 0x34, 0x05, 0xa5, 0x16,
	0x0a, 0x49, 0x70, 0xb1, 0x67, 0x42, 0x78, 0x12, 0x8c, 0x0a, 0x8c, 0x1a, 0x9c, 0x41, 0x30, 0xae,
	0x90, 0x02, 0x17, 0x77, 0x66, 0x4a, 0x48, 0x66, 0x41, 0x2a, 0x44, 0x96, 0x09, 0x2c, 0x8b, 0x2c,
	0x24, 0x24, 0xc6, 0xc5, 0x96, 0x99, 0xe2, 0x9b, 0x9a, 0x57, 0x2a, 0xc1, 0x0c, 0x96, 0x84, 0xf2,
	0x40, 0xe2, 0xc5, 0x25, 0x89, 0x25, 0xa5, 0xc5, 0x12, 0x2c, 0x10, 0x71, 0x08, 0x4f, 0xc9, 0x8e,
	0x8b, 0x37, 0x28, 0x35, 0x11, 0x66, 0x77, 0x71, 0x81, 0x90, 0x2e, 0x17, 0x47, 0x62, 0x4e, 0x0e,
	0xc4, 0x7c, 0x56, 0x05, 0x66, 0x0d, 0x6e, 0x23, 0x41, 0x3d, 0x90, 0x0f, 0xf4, 0x90, 0x5c, 0x18,
	0x04, 0x57, 0xa2, 0x54, 0xc3, 0xc5, 0x17, 0x5a, 0x90, 0x92, 0x58, 0x92, 0x3a, 0x10, 0xae, 0x37,
	0x3a, 0xc4, 0xc8, 0xc5, 0x03, 0xd6, 0x19, 0x9c, 0x5a, 0x54, 0x96, 0x99, 0x9c, 0x2a, 0x64, 0xce,
	0xc5, 0x01, 0x73, 0xa7, 0x10, 0xa6, 0xbb, 0xa5, 0xc4, 0xf4, 0x20, 0xd1, 0xa0, 0x07, 0x8b, 0x06,
	0x3d, 0x57, 0x50, 0x34, 0x28, 0x31, 0x08, 0x59, 0x71, 0x71, 0xc2, 0xc3, 0x41, 0x08, 0x87, 0x32,
	0x29, 0x61, 0x88, 0x89, 0x28, 0x01, 0xa6, 0xc4, 0x20, 0x64, 0xcb, 0xc5, 0x8d, 0x14, 0x06, 0x42,
	0x22, 0x10, 0x55, 0xa8, 0xc1, 0x82, 0xdb, 0xea, 0x24, 0x36, 0xb0, 0x88, 0x31, 0x20, 0x00, 0x00,
	0xff, 0xff, 0x3d, 0x4e, 0x1a, 0x1f, 0x36, 0x02, 0x00, 0x00,
}
