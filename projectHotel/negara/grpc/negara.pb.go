// Code generated by protoc-gen-go. DO NOT EDIT.
// source: negara.proto

/*
Package grpc is a generated protocol buffer package.

It is generated from these files:
	negara.proto

It has these top-level messages:
	AddNegaraReq
	ReadNegaraByNamaReq
	ReadNegaraByNamaResp
	ReadNegaraResp
	UpdateNegaraReq
*/
package grpc

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "github.com/golang/protobuf/ptypes/empty"

import (
	context "golang.org/x/net/context"
	grpc1 "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type AddNegaraReq struct {
	IdNegara   string `protobuf:"bytes,1,opt,name=idNegara" json:"idNegara,omitempty"`
	NamaNegara string `protobuf:"bytes,2,opt,name=namaNegara" json:"namaNegara,omitempty"`
	Status     string `protobuf:"bytes,3,opt,name=status" json:"status,omitempty"`
}

func (m *AddNegaraReq) Reset()                    { *m = AddNegaraReq{} }
func (m *AddNegaraReq) String() string            { return proto.CompactTextString(m) }
func (*AddNegaraReq) ProtoMessage()               {}
func (*AddNegaraReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *AddNegaraReq) GetIdNegara() string {
	if m != nil {
		return m.IdNegara
	}
	return ""
}

func (m *AddNegaraReq) GetNamaNegara() string {
	if m != nil {
		return m.NamaNegara
	}
	return ""
}

func (m *AddNegaraReq) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

type ReadNegaraByNamaReq struct {
	NamaNegara string `protobuf:"bytes,1,opt,name=namaNegara" json:"namaNegara,omitempty"`
}

func (m *ReadNegaraByNamaReq) Reset()                    { *m = ReadNegaraByNamaReq{} }
func (m *ReadNegaraByNamaReq) String() string            { return proto.CompactTextString(m) }
func (*ReadNegaraByNamaReq) ProtoMessage()               {}
func (*ReadNegaraByNamaReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *ReadNegaraByNamaReq) GetNamaNegara() string {
	if m != nil {
		return m.NamaNegara
	}
	return ""
}

type ReadNegaraByNamaResp struct {
	IdNegara   string `protobuf:"bytes,1,opt,name=idNegara" json:"idNegara,omitempty"`
	NamaNegara string `protobuf:"bytes,2,opt,name=namaNegara" json:"namaNegara,omitempty"`
	Status     string `protobuf:"bytes,3,opt,name=status" json:"status,omitempty"`
}

func (m *ReadNegaraByNamaResp) Reset()                    { *m = ReadNegaraByNamaResp{} }
func (m *ReadNegaraByNamaResp) String() string            { return proto.CompactTextString(m) }
func (*ReadNegaraByNamaResp) ProtoMessage()               {}
func (*ReadNegaraByNamaResp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *ReadNegaraByNamaResp) GetIdNegara() string {
	if m != nil {
		return m.IdNegara
	}
	return ""
}

func (m *ReadNegaraByNamaResp) GetNamaNegara() string {
	if m != nil {
		return m.NamaNegara
	}
	return ""
}

func (m *ReadNegaraByNamaResp) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

type ReadNegaraResp struct {
	AllNegara []*ReadNegaraByNamaResp `protobuf:"bytes,1,rep,name=allNegara" json:"allNegara,omitempty"`
}

func (m *ReadNegaraResp) Reset()                    { *m = ReadNegaraResp{} }
func (m *ReadNegaraResp) String() string            { return proto.CompactTextString(m) }
func (*ReadNegaraResp) ProtoMessage()               {}
func (*ReadNegaraResp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *ReadNegaraResp) GetAllNegara() []*ReadNegaraByNamaResp {
	if m != nil {
		return m.AllNegara
	}
	return nil
}

type UpdateNegaraReq struct {
	IdNegara   string `protobuf:"bytes,1,opt,name=idNegara" json:"idNegara,omitempty"`
	NamaNegara string `protobuf:"bytes,2,opt,name=namaNegara" json:"namaNegara,omitempty"`
	Status     string `protobuf:"bytes,3,opt,name=status" json:"status,omitempty"`
}

func (m *UpdateNegaraReq) Reset()                    { *m = UpdateNegaraReq{} }
func (m *UpdateNegaraReq) String() string            { return proto.CompactTextString(m) }
func (*UpdateNegaraReq) ProtoMessage()               {}
func (*UpdateNegaraReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *UpdateNegaraReq) GetIdNegara() string {
	if m != nil {
		return m.IdNegara
	}
	return ""
}

func (m *UpdateNegaraReq) GetNamaNegara() string {
	if m != nil {
		return m.NamaNegara
	}
	return ""
}

func (m *UpdateNegaraReq) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func init() {
	proto.RegisterType((*AddNegaraReq)(nil), "grpc.AddNegaraReq")
	proto.RegisterType((*ReadNegaraByNamaReq)(nil), "grpc.ReadNegaraByNamaReq")
	proto.RegisterType((*ReadNegaraByNamaResp)(nil), "grpc.ReadNegaraByNamaResp")
	proto.RegisterType((*ReadNegaraResp)(nil), "grpc.ReadNegaraResp")
	proto.RegisterType((*UpdateNegaraReq)(nil), "grpc.UpdateNegaraReq")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc1.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc1.SupportPackageIsVersion4

// Client API for NegaraService service

type NegaraServiceClient interface {
	AddNegara(ctx context.Context, in *AddNegaraReq, opts ...grpc1.CallOption) (*google_protobuf.Empty, error)
	ReadNegara(ctx context.Context, in *google_protobuf.Empty, opts ...grpc1.CallOption) (*ReadNegaraResp, error)
	UpdateNegara(ctx context.Context, in *UpdateNegaraReq, opts ...grpc1.CallOption) (*google_protobuf.Empty, error)
	ReadNegaraByNama(ctx context.Context, in *ReadNegaraByNamaReq, opts ...grpc1.CallOption) (*ReadNegaraByNamaResp, error)
}

type negaraServiceClient struct {
	cc *grpc1.ClientConn
}

func NewNegaraServiceClient(cc *grpc1.ClientConn) NegaraServiceClient {
	return &negaraServiceClient{cc}
}

func (c *negaraServiceClient) AddNegara(ctx context.Context, in *AddNegaraReq, opts ...grpc1.CallOption) (*google_protobuf.Empty, error) {
	out := new(google_protobuf.Empty)
	err := grpc1.Invoke(ctx, "/grpc.NegaraService/AddNegara", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *negaraServiceClient) ReadNegara(ctx context.Context, in *google_protobuf.Empty, opts ...grpc1.CallOption) (*ReadNegaraResp, error) {
	out := new(ReadNegaraResp)
	err := grpc1.Invoke(ctx, "/grpc.NegaraService/ReadNegara", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *negaraServiceClient) UpdateNegara(ctx context.Context, in *UpdateNegaraReq, opts ...grpc1.CallOption) (*google_protobuf.Empty, error) {
	out := new(google_protobuf.Empty)
	err := grpc1.Invoke(ctx, "/grpc.NegaraService/UpdateNegara", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *negaraServiceClient) ReadNegaraByNama(ctx context.Context, in *ReadNegaraByNamaReq, opts ...grpc1.CallOption) (*ReadNegaraByNamaResp, error) {
	out := new(ReadNegaraByNamaResp)
	err := grpc1.Invoke(ctx, "/grpc.NegaraService/ReadNegaraByNama", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for NegaraService service

type NegaraServiceServer interface {
	AddNegara(context.Context, *AddNegaraReq) (*google_protobuf.Empty, error)
	ReadNegara(context.Context, *google_protobuf.Empty) (*ReadNegaraResp, error)
	UpdateNegara(context.Context, *UpdateNegaraReq) (*google_protobuf.Empty, error)
	ReadNegaraByNama(context.Context, *ReadNegaraByNamaReq) (*ReadNegaraByNamaResp, error)
}

func RegisterNegaraServiceServer(s *grpc1.Server, srv NegaraServiceServer) {
	s.RegisterService(&_NegaraService_serviceDesc, srv)
}

func _NegaraService_AddNegara_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc1.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddNegaraReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NegaraServiceServer).AddNegara(ctx, in)
	}
	info := &grpc1.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.NegaraService/AddNegara",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NegaraServiceServer).AddNegara(ctx, req.(*AddNegaraReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _NegaraService_ReadNegara_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc1.UnaryServerInterceptor) (interface{}, error) {
	in := new(google_protobuf.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NegaraServiceServer).ReadNegara(ctx, in)
	}
	info := &grpc1.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.NegaraService/ReadNegara",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NegaraServiceServer).ReadNegara(ctx, req.(*google_protobuf.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _NegaraService_UpdateNegara_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc1.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateNegaraReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NegaraServiceServer).UpdateNegara(ctx, in)
	}
	info := &grpc1.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.NegaraService/UpdateNegara",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NegaraServiceServer).UpdateNegara(ctx, req.(*UpdateNegaraReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _NegaraService_ReadNegaraByNama_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc1.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReadNegaraByNamaReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NegaraServiceServer).ReadNegaraByNama(ctx, in)
	}
	info := &grpc1.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.NegaraService/ReadNegaraByNama",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NegaraServiceServer).ReadNegaraByNama(ctx, req.(*ReadNegaraByNamaReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _NegaraService_serviceDesc = grpc1.ServiceDesc{
	ServiceName: "grpc.NegaraService",
	HandlerType: (*NegaraServiceServer)(nil),
	Methods: []grpc1.MethodDesc{
		{
			MethodName: "AddNegara",
			Handler:    _NegaraService_AddNegara_Handler,
		},
		{
			MethodName: "ReadNegara",
			Handler:    _NegaraService_ReadNegara_Handler,
		},
		{
			MethodName: "UpdateNegara",
			Handler:    _NegaraService_UpdateNegara_Handler,
		},
		{
			MethodName: "ReadNegaraByNama",
			Handler:    _NegaraService_ReadNegaraByNama_Handler,
		},
	},
	Streams:  []grpc1.StreamDesc{},
	Metadata: "negara.proto",
}

func init() { proto.RegisterFile("negara.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 298 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x52, 0x4d, 0x4b, 0xc3, 0x40,
	0x10, 0x4d, 0x5a, 0x29, 0x66, 0x8c, 0x1f, 0x8c, 0xb5, 0xd4, 0x15, 0x44, 0xf6, 0xd4, 0xd3, 0x16,
	0x2a, 0x82, 0x82, 0x20, 0x0a, 0x5e, 0x14, 0x7a, 0x88, 0xf8, 0x03, 0x36, 0xcd, 0x1a, 0x2a, 0x49,
	0xb3, 0x4d, 0xb6, 0x42, 0xff, 0x88, 0xbf, 0x57, 0xb2, 0x1b, 0x93, 0x18, 0xdb, 0xde, 0x72, 0x9c,
	0x99, 0x37, 0xef, 0xcd, 0xbc, 0x19, 0x70, 0x17, 0x22, 0xe4, 0x29, 0x67, 0x32, 0x4d, 0x54, 0x82,
	0x7b, 0x61, 0x2a, 0x67, 0xe4, 0x22, 0x4c, 0x92, 0x30, 0x12, 0x63, 0x9d, 0xf3, 0x57, 0x1f, 0x63,
	0x11, 0x4b, 0xb5, 0x36, 0x10, 0xea, 0x83, 0xfb, 0x18, 0x04, 0x53, 0xdd, 0xe5, 0x89, 0x25, 0x12,
	0xd8, 0x9f, 0x17, 0xe1, 0xd0, 0xbe, 0xb2, 0x47, 0x8e, 0x57, 0xc6, 0x78, 0x09, 0xb0, 0xe0, 0x31,
	0x2f, 0xaa, 0x1d, 0x5d, 0xad, 0x65, 0x70, 0x00, 0xbd, 0x4c, 0x71, 0xb5, 0xca, 0x86, 0x5d, 0x5d,
	0x2b, 0x22, 0x7a, 0x03, 0xa7, 0x9e, 0xe0, 0x05, 0xcb, 0xd3, 0x7a, 0xca, 0x63, 0x2d, 0xf5, 0x97,
	0xce, 0x6e, 0xd2, 0xd1, 0x4f, 0xe8, 0xff, 0x6f, 0xcb, 0x64, 0x2b, 0x23, 0xbe, 0xc0, 0x51, 0xa5,
	0xa5, 0x55, 0x6e, 0xc1, 0xe1, 0x51, 0x54, 0xca, 0x74, 0x47, 0x07, 0x13, 0xc2, 0x72, 0x3f, 0xd9,
	0xa6, 0xa1, 0xbc, 0x0a, 0x4c, 0x05, 0x1c, 0xbf, 0xcb, 0x80, 0x2b, 0xd1, 0xaa, 0xab, 0x93, 0xef,
	0x0e, 0x1c, 0x1a, 0xc8, 0x9b, 0x48, 0xbf, 0xe6, 0x33, 0x81, 0x77, 0xe0, 0x94, 0xb7, 0x44, 0x34,
	0xc3, 0xd6, 0x8f, 0x4b, 0x06, 0xcc, 0xbc, 0x02, 0xfb, 0x7d, 0x05, 0xf6, 0x9c, 0xbf, 0x02, 0xb5,
	0xf0, 0x1e, 0xa0, 0x5a, 0x0b, 0xb7, 0xe0, 0x48, 0xbf, 0x69, 0x40, 0xbe, 0x3a, 0xb5, 0xf0, 0x01,
	0xdc, 0xfa, 0xc6, 0x78, 0x66, 0x70, 0x0d, 0x17, 0x76, 0xc8, 0xbf, 0xc2, 0x49, 0xd3, 0x55, 0x3c,
	0xdf, 0xe6, 0xf6, 0x92, 0xec, 0x38, 0x04, 0xb5, 0xfc, 0x9e, 0xa6, 0xbf, 0xfe, 0x09, 0x00, 0x00,
	0xff, 0xff, 0x47, 0xb7, 0xb4, 0xb5, 0x0c, 0x03, 0x00, 0x00,
}
